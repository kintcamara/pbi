name: Push Docker Image frontend and backend

on:
  push:
    branches:
      - frontend
      - backend
    paths-ignore: ["**.md"]
  pull_request:
    branches:
      - frontend
      - backend
    paths-ignore: ["**.md"]

env:
  version: v1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18, 20, 21]
    steps:
      - name: Echo System Info
        run: |
          echo "-------------Systeme d'exploitation--------"
          echo "${{ matrix.os }}"
          echo "----------------Version---------------------"
          echo "${{ env.version }}"
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/pbi:${{ github.event_name == 'push' && github.ref == 'refs/heads/frontend' && 'frontend' || 'backend' }}"
          docker build ./${{ github.event_name == 'push' && github.ref == 'refs/heads/frontend' && 'frontend' || 'backend' }} -t $IMAGE_NAME
          docker push $IMAGE_NAME
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Deploy to Production Server
        run: |
          echo "-------------Deploy to Production Server----------"
          echo "Deployed on the production server"
          
        # Uncomment the following block to use SSH for deployment
        # - name: Deploy to Production Server
        #   uses: appleboy/ssh-action@master
        #   with:
        #     host: ${{ secrets.SSH_HOST }}
        #     username: ${{ secrets.SSH_USER }}
        #     key: ${{ secrets.SSH_PRIVATE_KEY }}
        #     port: ${{ secrets.SSH_PORT }}
        #     script: |
        #       cd /application-js/e-shopging && pwd
        #       docker-compose down
        #       docker-compose up -d --build
        #       docker-compose ps -a
