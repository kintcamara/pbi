name: Push Docker Image frontend and backend
on:
  push:
    branches:
      - frontend
      - backend
      - prod
      
    paths-ignore: ["**.md"]
  pull_request:
    branches:
      - frontend
      - backend
      - prod
    paths-ignore: ["**.md"]
env:
   version: v1
jobs:
  backend:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18,20,21]
    steps:
      - name: echo
        run: |
           echo "-------------Systeme d'exploitation--------"
           echo "${{matrix.os}}"
           echo "----------------Version---------------------"
           echo ${{env.version}}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node}}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image backend
        run: docker build ./backend -t ${{secrets.DOCKER_USERNAME}}/pbi:backend
      - name: Push Docker image backend
        run: docker push ${{secrets.DOCKER_USERNAME}}/pbi:backend

  frontend:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]
    needs: backend
    steps:
      - name: echo
        run: |
           echo "-------------Systeme d'exploitation--------"
           echo "${{matrix.os}}"
           echo "----------------Version---------------------"
           echo ${{env.version}}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node}}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image frontend
        run: docker build ./frontend -t ${{secrets.DOCKER_USERNAME}}/pbi:frontend
      - name: Push Docker image frontend
        run: docker push ${{secrets.DOCKER_USERNAME}}/pbi:frontend
  deploy:
       runs-on: [ubuntu-latest]
       needs: [frontend,backend]
       steps:
         - name: Deploy to Production Server
           run: |
              echo "-------------Deploy to Production Servern----------"
              echo "Deployed on the production server"
          
        #- name: Deploy to Production Server
        #   uses: appleboy/ssh-action@master
        #   with:
        #     host: ${{secrets.SSH_HOST}}
        #     username: ${{secrets.SSH_USER}}
        #     key: ${{secrets.SSH_PRIVATE_KEY}}
        #     port: ${{ secrets.SSH_PORT }}
        #     script: |
        #       cd /application-js/e-shopging && pwd
        #       # remove the existing
        #       docker-compose down
        #       #up container
        #       docker compose up -d --build
        #       #show container process
        #       docker compose ps -a
      